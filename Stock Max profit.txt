//Assuming price not same for consequitive days.
/*
import java.util.*;
class Fun{
	int maxProfit(int[] arr){
		ArrayList<Integer> sell=new ArrayList<Integer>();
		ArrayList<Integer> buy=new ArrayList<Integer>();
		//1st index. only possible to buy.
		if(arr[0]<arr[1]){
				buy.add(arr[0]);
		}
		for(int i=1;i<arr.length-1;i++){
			if(arr[i]>arr[i-1] && arr[i]>arr[i+1]){
				sell.add(arr[i]);
			}
			if(arr[i]<arr[i-1] && arr[i]<arr[i+1]){
				buy.add(arr[i]);
			}
			
		}
		//At last index, obiously you will not buy. sell if possible
		if(arr[arr.length-1]>arr[arr.length-2]){
			sell.add(arr[arr.length-1]);
		}
		int profit=0;
		for(int i=0;i<sell.size();i++){
			System.out.println("("+buy.get(i)+","+sell.get(i)+")");
			profit=profit+(sell.get(i)-buy.get(i));
		}
		return profit;
	}
}
class Main{
	public static void main(String[] args){
		Fun obj=new Fun();
		int[] arr={1,5,3,8,12};
		System.out.println(obj.maxProfit(arr));
	}
}
*/
class Fun{
	int maxProfit(int[] arr){
		int profit=0;
		for(int i=1;i<arr.length;i++){
			if(arr[i]>arr[i-1]){
				profit=profit+(arr[i]-arr[i-1]);
			}
		}
		return profit;
	}
}
class Main{
	public static void main(String[] args){
		Fun obj=new Fun();
		int[] arr={1,5,3,8,12};
		System.out.println(obj.maxProfit(arr));
	}
}